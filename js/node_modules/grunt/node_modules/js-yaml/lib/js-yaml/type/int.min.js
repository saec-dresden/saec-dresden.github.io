"use strict";var NIL=require("../common").NIL;var Type=require("../type");var YAML_INTEGER_PATTERN=new RegExp("^(?:[-+]?0b[0-1_]+|[-+]?0[0-7_]+|[-+]?(?:0|[1-9][0-9_]*)|[-+]?0x[0-9a-fA-F_]+|[-+]?[1-9][0-9_]*(?::[0-5]?[0-9])+)$");function resolveYamlInteger(c){var e,d,a,b;if(!YAML_INTEGER_PATTERN.test(c)){return NIL}e=c.replace(/_/g,"");d="-"===e[0]?-1:1;b=[];if(0<="+-".indexOf(e[0])){e=e.slice(1)}if("0"===e){return 0}else{if(/^0b/.test(e)){return d*parseInt(e.slice(2),2)}else{if(/^0x/.test(e)){return d*parseInt(e,16)}else{if("0"===e[0]){return d*parseInt(e,8)}else{if(0<=e.indexOf(":")){e.split(":").forEach(function(f){b.unshift(parseInt(f,10))});e=0;a=1;b.forEach(function(f){e+=(f*a);a*=60});return d*e}else{return d*parseInt(e,10)}}}}}}module.exports=new Type("tag:yaml.org,2002:int",{loader:{kind:"string",resolver:resolveYamlInteger},dumper:{kind:"integer",defaultStyle:"decimal",representer:{binary:function(a){return"0b"+a.toString(2)},octal:function(a){return"0"+a.toString(8)},decimal:function(a){return a.toString(10)},hexadecimal:function(a){return"0x"+a.toString(16).toUpperCase()}},styleAliases:{binary:[2,"bin"],octal:[8,"oct"],decimal:[10,"dec"],hexadecimal:[16,"hex"]}}});