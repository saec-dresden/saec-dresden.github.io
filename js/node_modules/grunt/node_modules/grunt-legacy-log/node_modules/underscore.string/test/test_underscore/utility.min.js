$(document).ready(function(){var a;module("Utility",{setup:function(){a=_.clone(_.templateSettings)},teardown:function(){_.templateSettings=a}});test("#750 - Return _ instance.",2,function(){var b=_([]);ok(_(b)===b);ok(new _(b)===b)});test("identity",function(){var b={name:"moe"};equal(_.identity(b),b,"moe is the same as his identity")});test("uniqueId",function(){var c=[],b=0;while(b++<100){c.push(_.uniqueId())}equal(_.uniq(c).length,c.length,"can generate a globally-unique stream of ids")});test("times",function(){var b=[];_.times(3,function(c){b.push(c)});ok(_.isEqual(b,[0,1,2]),"is 0 indexed");b=[];_(3).times(function(c){b.push(c)});ok(_.isEqual(b,[0,1,2]),"works as a wrapper")});test("mixin",function(){_.mixin({myReverse:function(b){return b.split("").reverse().join("")}});equal(_.myReverse("panacea"),"aecanap","mixed in a function to _");equal(_("champ").myReverse(),"pmahc","mixed in a function to the OOP wrapper")});test("_.escape",function(){equal(_.escape("Curly & Moe"),"Curly &amp; Moe");equal(_.escape("Curly &amp; Moe"),"Curly &amp;amp; Moe");equal(_.escape(null),"")});test("_.unescape",function(){var b="Curly & Moe";equal(_.unescape("Curly &amp; Moe"),b);equal(_.unescape("Curly &amp;amp; Moe"),"Curly &amp; Moe");equal(_.unescape(null),"");equal(_.unescape(_.escape(b)),b)});test("template",function(){var c=_.template("<%= thing %> is gettin' on my noives!");var q=c({thing:"This"});equal(q,"This is gettin' on my noives!","can do basic attribute interpolation");var r=_.template("A <% this %> B");equal(r(),"A  B");var b=_.template("<%= thing %> is \\ridanculous");equal(b({thing:"This"}),"This is \\ridanculous");var i=_.template('<%= a ? "checked=\\"checked\\"" : "" %>');equal(i({a:true}),'checked="checked"',"can handle slash escapes in interpolations.");var j=_.template("<ul><%       for (key in people) {     %><li><%= people[key] %></li><% } %></ul>");q=j({people:{moe:"Moe",larry:"Larry",curly:"Curly"}});equal(q,"<ul><li>Moe</li><li>Larry</li><li>Curly</li></ul>","can run arbitrary javascript in templates");var h=_.template("<ul><% _.each(numbers.split('\\n'), function(item) { %><li><%= item %></li><% }) %></ul>");q=h({numbers:"one\ntwo\nthree\nfour"});equal(q,"<ul><li>one</li><li>two</li><li>three</li><li>four</li></ul>","Can use escaped characters (e.g. \\n) in Javascript");var m=_.template('<%= pageCount %> <%= thumbnails[pageCount] %> <% _.each(thumbnails, function(p) { %><div class="thumbnail" rel="<%= p %>"></div><% }); %>');q=m({pageCount:3,thumbnails:{1:"p1-thumbnail.gif",2:"p2-thumbnail.gif",3:"p3-thumbnail.gif"}});equal(q,'3 p3-thumbnail.gif <div class="thumbnail" rel="p1-thumbnail.gif"></div><div class="thumbnail" rel="p2-thumbnail.gif"></div><div class="thumbnail" rel="p3-thumbnail.gif"></div>');var n=_.template("<div><p>Just some text. Hey, I know this is silly but it aids consistency.</p></div>");q=n();equal(q,"<div><p>Just some text. Hey, I know this is silly but it aids consistency.</p></div>");var p=_.template("It's its, not it's");equal(p({}),"It's its, not it's");var o=_.template("<%      if(foo == 'bar'){     %>Statement quotes and 'quotes'.<% } %>");equal(o({foo:"bar"}),"Statement quotes and 'quotes'.");var v=_.template("This\n\t\tis: <%= x %>.\n\tok.\nend.");equal(v({x:"that"}),"This\n\t\tis: that.\n\tok.\nend.");var t=_.template("<i><%- value %></i>");var q=t({value:"<script>"});equal(q,"<i>&lt;script&gt;</i>");var s={name:"Moe",template:_.template("I'm <%= this.name %>")};equal(s.template(),"I'm Moe");if(!$.browser.msie){var k=_.template($("#template").html());equal(k({data:12345}).replace(/\s/g,""),"<li>24690</li>")}_.templateSettings={evaluate:/\{\{([\s\S]+?)\}\}/g,interpolate:/\{\{=([\s\S]+?)\}\}/g};var d=_.template("<ul>{{ for (key in people) { }}<li>{{= people[key] }}</li>{{ } }}</ul>");q=d({people:{moe:"Moe",larry:"Larry",curly:"Curly"}});equal(q,"<ul><li>Moe</li><li>Larry</li><li>Curly</li></ul>","can run arbitrary javascript in templates");var e=_.template("It's its, not it's");equal(e({}),"It's its, not it's");var o=_.template("{{ if(foo == 'bar'){ }}Statement quotes and 'quotes'.{{ } }}");equal(o({foo:"bar"}),"Statement quotes and 'quotes'.");_.templateSettings={evaluate:/<\?([\s\S]+?)\?>/g,interpolate:/<\?=([\s\S]+?)\?>/g};var f=_.template("<ul><? for (key in people) { ?><li><?= people[key] ?></li><? } ?></ul>");q=f({people:{moe:"Moe",larry:"Larry",curly:"Curly"}});equal(q,"<ul><li>Moe</li><li>Larry</li><li>Curly</li></ul>","can run arbitrary javascript in templates");var g=_.template("It's its, not it's");equal(g({}),"It's its, not it's");var o=_.template("<? if(foo == 'bar'){ ?>Statement quotes and 'quotes'.<? } ?>");equal(o({foo:"bar"}),"Statement quotes and 'quotes'.");_.templateSettings={interpolate:/\{\{(.+?)\}\}/g};var l=_.template("Hello {{planet}}!");equal(l({planet:"World"}),"Hello World!","can mimic mustache.js");var u=_.template("a null undefined {{planet}}");equal(u({planet:"world"}),"a null undefined world","can handle missing escape and evaluate settings")});test("_.template provides the generated function source, when a SyntaxError occurs",function(){try{_.template("<b><%= if %></b>")}catch(b){ok(b.source.indexOf("( if )")>0)}});test("_.template handles \\u2028 & \\u2029",function(){var b=_.template('<p>\u2028<%= "\\u2028\\u2029" %>\u2029</p>');strictEqual(b(),"<p>\u2028\u2028\u2029\u2029</p>")});test("result calls functions and returns primitives",function(){var b={w:"",x:"x",y:function(){return this.x}};strictEqual(_.result(b,"w"),"");strictEqual(_.result(b,"x"),"x");strictEqual(_.result(b,"y"),"x");strictEqual(_.result(b,"z"),undefined);strictEqual(_.result(null,"x"),null)});test("_.templateSettings.variable",function(){var c="<%=data.x%>";var b={x:"x"};strictEqual(_.template(c,b,{variable:"data"}),"x");_.templateSettings.variable="data";strictEqual(_.template(c)(b),"x")});test("#547 - _.templateSettings is unchanged by custom settings.",function(){ok(!_.templateSettings.variable);_.template("",{},{variable:"x"});ok(!_.templateSettings.variable)});test("#556 - undefined template variables.",function(){var b=_.template("<%=x%>");strictEqual(b({x:null}),"");strictEqual(b({x:undefined}),"");var c=_.template("<%-x%>");strictEqual(c({x:null}),"");strictEqual(c({x:undefined}),"");var d=_.template("<%=x.foo%>");strictEqual(d({x:{}}),"");strictEqual(d({x:{}}),"");var e=_.template("<%-x.foo%>");strictEqual(e({x:{}}),"");strictEqual(e({x:{}}),"")});test("interpolate evaluates code only once.",2,function(){var b=0;var d=_.template("<%= f() %>");d({f:function(){ok(!(b++))}});var c=0;var e=_.template("<%- f() %>");e({f:function(){ok(!(c++))}})});test("#746 - _.template settings are not modified.",1,function(){var b={};_.template("",null,b);deepEqual(b,{})});test("#779 - delimeters are applied to unescaped text.",1,function(){var b=_.template("<<\nx\n>>",null,{evaluate:/<<(.*?)>>/g});strictEqual(b(),"<<\nx\n>>")})});