$(document).ready(function(){module("Utility");test("utility: noConflict",function(){var b=_.noConflict();ok(b.isUndefined(_),"The '_' variable has been returned to its previous state.");var a=b.intersect([-1,0,1,2],[1,2,3,4]);equals(a.join(", "),"1, 2","but the intersection function still works");window._=b});test("utility: identity",function(){var a={name:"moe"};equals(_.identity(a),a,"moe is the same as his identity")});test("utility: uniqueId",function(){var b=[],a=0;while(a++<100){b.push(_.uniqueId())}equals(_.uniq(b).length,b.length,"can generate a globally-unique stream of ids")});test("utility: times",function(){var a=[];_.times(3,function(b){a.push(b)});ok(_.isEqual(a,[0,1,2]),"is 0 indexed");a=[];_(3).times(function(b){a.push(b)});ok(_.isEqual(a,[0,1,2]),"works as a wrapper")});test("utility: mixin",function(){_.mixin({myReverse:function(a){return a.split("").reverse().join("")}});equals(_.myReverse("panacea"),"aecanap","mixed in a function to _");equals(_("champ").myReverse(),"pmahc","mixed in a function to the OOP wrapper")});test("utility: _.escape",function(){equals(_.escape("Curly & Moe"),"Curly &amp; Moe");equals(_.escape("Curly &amp; Moe"),"Curly &amp;amp; Moe")});test("utility: template",function(){var b=_.template("<%= thing %> is gettin' on my noives!");var p=b({thing:"This"});equals(p,"This is gettin' on my noives!","can do basic attribute interpolation");var q=_.template("A <% this %> B");equals(q(),"A  B");var a=_.template("<%= thing %> is \\ridanculous");equals(a({thing:"This"}),"This is \\ridanculous");var h=_.template('<%= a ? "checked=\\"checked\\"" : "" %>');equals(h({a:true}),'checked="checked"',"can handle slash escapes in interpolations.");var i=_.template("<ul><%       for (key in people) {     %><li><%= people[key] %></li><% } %></ul>");p=i({people:{moe:"Moe",larry:"Larry",curly:"Curly"}});equals(p,"<ul><li>Moe</li><li>Larry</li><li>Curly</li></ul>","can run arbitrary javascript in templates");var g=_.template("<ul><% _.each(numbers.split('\\n'), function(item) { %><li><%= item %></li><% }) %></ul>");p=g({numbers:"one\ntwo\nthree\nfour"});equals(p,"<ul><li>one</li><li>two</li><li>three</li><li>four</li></ul>","Can use escaped characters (e.g. \\n) in Javascript");var l=_.template('<%= pageCount %> <%= thumbnails[pageCount] %> <% _.each(thumbnails, function(p) { %><div class="thumbnail" rel="<%= p %>"></div><% }); %>');p=l({pageCount:3,thumbnails:{1:"p1-thumbnail.gif",2:"p2-thumbnail.gif",3:"p3-thumbnail.gif"}});equals(p,'3 p3-thumbnail.gif <div class="thumbnail" rel="p1-thumbnail.gif"></div><div class="thumbnail" rel="p2-thumbnail.gif"></div><div class="thumbnail" rel="p3-thumbnail.gif"></div>');var m=_.template("<div><p>Just some text. Hey, I know this is silly but it aids consistency.</p></div>");p=m();equals(p,"<div><p>Just some text. Hey, I know this is silly but it aids consistency.</p></div>");var o=_.template("It's its, not it's");equals(o({}),"It's its, not it's");var n=_.template("<%      if(foo == 'bar'){     %>Statement quotes and 'quotes'.<% } %>");equals(n({foo:"bar"}),"Statement quotes and 'quotes'.");var u=_.template("This\n\t\tis: <%= x %>.\n\tok.\nend.");equals(u({x:"that"}),"This\n\t\tis: that.\n\tok.\nend.");var s=_.template("<i><%- value %></i>");var p=s({value:"<script>"});equals(p,"<i>&lt;script&gt;</i>");var r={name:"Moe",template:_.template("I'm <%= this.name %>")};equals(r.template(),"I'm Moe");if(!$.browser.msie){var j=_.template($("#template").html());equals(j({data:12345}).replace(/\s/g,""),"<li>24690</li>")}_.templateSettings={evaluate:/\{\{([\s\S]+?)\}\}/g,interpolate:/\{\{=([\s\S]+?)\}\}/g};var c=_.template("<ul>{{ for (key in people) { }}<li>{{= people[key] }}</li>{{ } }}</ul>");p=c({people:{moe:"Moe",larry:"Larry",curly:"Curly"}});equals(p,"<ul><li>Moe</li><li>Larry</li><li>Curly</li></ul>","can run arbitrary javascript in templates");var d=_.template("It's its, not it's");equals(d({}),"It's its, not it's");var n=_.template("{{ if(foo == 'bar'){ }}Statement quotes and 'quotes'.{{ } }}");equals(n({foo:"bar"}),"Statement quotes and 'quotes'.");_.templateSettings={evaluate:/<\?([\s\S]+?)\?>/g,interpolate:/<\?=([\s\S]+?)\?>/g};var e=_.template("<ul><? for (key in people) { ?><li><?= people[key] ?></li><? } ?></ul>");p=e({people:{moe:"Moe",larry:"Larry",curly:"Curly"}});equals(p,"<ul><li>Moe</li><li>Larry</li><li>Curly</li></ul>","can run arbitrary javascript in templates");var f=_.template("It's its, not it's");equals(f({}),"It's its, not it's");var n=_.template("<? if(foo == 'bar'){ ?>Statement quotes and 'quotes'.<? } ?>");equals(n({foo:"bar"}),"Statement quotes and 'quotes'.");_.templateSettings={interpolate:/\{\{(.+?)\}\}/g};var k=_.template("Hello {{planet}}!");equals(k({planet:"World"}),"Hello World!","can mimic mustache.js");var t=_.template("a null undefined {{planet}}");equals(t({planet:"world"}),"a null undefined world","can handle missing escape and evaluate settings")})});