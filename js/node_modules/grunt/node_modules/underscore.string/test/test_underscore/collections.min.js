$(document).ready(function(){module("Collections");test("collections: each",function(){_.each([1,2,3],function(d,c){equals(d,c+1,"each iterators provide value and iteration count")});var a=[];_.each([1,2,3],function(c){a.push(c*this.multiplier)},{multiplier:5});equals(a.join(", "),"5, 10, 15","context object property accessed");a=[];_.forEach([1,2,3],function(c){a.push(c)});equals(a.join(", "),"1, 2, 3",'aliased as "forEach"');a=[];var b={one:1,two:2,three:3};b.constructor.prototype.four=4;_.each(b,function(d,c){a.push(c)});equals(a.join(", "),"one, two, three","iterating over objects works, and ignores the object prototype.");delete b.constructor.prototype.four;answer=null;_.each([1,2,3],function(e,d,c){if(_.include(c,e)){answer=true}});ok(answer,"can reference the original collection from inside the iterator");a=0;_.each(null,function(){++a});equals(a,0,"handles a null properly")});test("collections: map",function(){var a=_.map([1,2,3],function(f){return f*2});equals(a.join(", "),"2, 4, 6","doubled numbers");a=_.collect([1,2,3],function(f){return f*2});equals(a.join(", "),"2, 4, 6",'aliased as "collect"');var e=_.map([1,2,3],function(f){return f*this.multiplier},{multiplier:3});equals(e.join(", "),"3, 6, 9","tripled numbers with context");var a=_([1,2,3]).map(function(f){return f*2});equals(a.join(", "),"2, 4, 6","OO-style doubled numbers");var b=_.map($("div.underscore-test").children(),function(f){return f.id});ok(_.include(b,"qunit-header"),"can use collection methods on NodeLists");var b=_.map(document.images,function(f){return f.id});ok(b[0]=="chart_image","can use collection methods on HTMLCollections");var c=_.map(null,function(){});ok(_.isArray(c)&&c.length===0,"handles a null properly");var d=_.map(Array(2),function(f){return f}).length;equals(d,2,"can preserve a sparse array's length")});test("collections: reduce",function(){var e=_.reduce([1,2,3],function(g,f){return g+f},0);equals(e,6,"can sum up an array");var a={multiplier:3};e=_.reduce([1,2,3],function(g,f){return g+f*this.multiplier},0,a);equals(e,18,"can reduce with a context object");e=_.inject([1,2,3],function(g,f){return g+f},0);equals(e,6,'aliased as "inject"');e=_([1,2,3]).reduce(function(g,f){return g+f},0);equals(e,6,"OO-style reduce");var e=_.reduce([1,2,3],function(g,f){return g+f});equals(e,6,"default initial value");var c;try{_.reduce(null,function(){})}catch(b){c=b}ok(c instanceof TypeError,"handles a null (without inital value) properly");ok(_.reduce(null,function(){},138)===138,"handles a null (with initial value) properly");equals(_.reduce([],function(){},undefined),undefined,"undefined can be passed as a special case");raises(function(){_.reduce([],function(){})},TypeError,"throws an error for empty arrays with no initial value");var d=[];d[0]=20;d[2]=-5;equals(_.reduce(d,function(f,g){return f-g}),25,"initially-sparse arrays with no memo")});test("collections: reduceRight",function(){var c=_.reduceRight(["foo","bar","baz"],function(e,f){return e+f},"");equals(c,"bazbarfoo","can perform right folds");var c=_.foldr(["foo","bar","baz"],function(e,f){return e+f},"");equals(c,"bazbarfoo",'aliased as "foldr"');var c=_.foldr(["foo","bar","baz"],function(e,f){return e+f});equals(c,"bazbarfoo","default initial value");var b;try{_.reduceRight(null,function(){})}catch(a){b=a}ok(b instanceof TypeError,"handles a null (without inital value) properly");ok(_.reduceRight(null,function(){},138)===138,"handles a null (with initial value) properly");equals(_.reduceRight([],function(){},undefined),undefined,"undefined can be passed as a special case");raises(function(){_.reduceRight([],function(){})},TypeError,"throws an error for empty arrays with no initial value");var d=[];d[0]=20;d[2]=-5;equals(_.reduceRight(d,function(e,f){return e-f}),-25,"initially-sparse arrays with no memo")});test("collections: detect",function(){var a=_.detect([1,2,3],function(b){return b*2==4});equals(a,2,'found the first "2" and broke the loop')});test("collections: select",function(){var a=_.select([1,2,3,4,5,6],function(b){return b%2==0});equals(a.join(", "),"2, 4, 6","selected each even number");a=_.filter([1,2,3,4,5,6],function(b){return b%2==0});equals(a.join(", "),"2, 4, 6",'aliased as "filter"')});test("collections: reject",function(){var a=_.reject([1,2,3,4,5,6],function(b){return b%2==0});equals(a.join(", "),"1, 3, 5","rejected each even number")});test("collections: all",function(){ok(_.all([],_.identity),"the empty set");ok(_.all([true,true,true],_.identity),"all true values");ok(!_.all([true,false,true],_.identity),"one false value");ok(_.all([0,10,28],function(a){return a%2==0}),"even numbers");ok(!_.all([0,11,28],function(a){return a%2==0}),"an odd number");ok(_.every([true,true,true],_.identity),'aliased as "every"')});test("collections: any",function(){var a=Array.prototype.some;Array.prototype.some=null;ok(!_.any([]),"the empty set");ok(!_.any([false,false,false]),"all false values");ok(_.any([false,false,true]),"one true value");ok(_.any([null,0,"yes",false]),"a string");ok(!_.any([null,0,"",false]),"falsy values");ok(!_.any([1,11,29],function(b){return b%2==0}),"all odd numbers");ok(_.any([1,10,29],function(b){return b%2==0}),"an even number");ok(_.some([false,false,true]),'aliased as "some"');Array.prototype.some=a});test("collections: include",function(){ok(_.include([1,2,3],2),"two is in the array");ok(!_.include([1,3,9],2),"two is not in the array");ok(_.contains({moe:1,larry:3,curly:9},3)===true,"_.include on objects checks their values");ok(_([1,2,3]).include(2),"OO-style include")});test("collections: invoke",function(){var a=[[5,1,7],[3,2,1]];var b=_.invoke(a,"sort");equals(b[0].join(", "),"1, 5, 7","first array sorted");equals(b[1].join(", "),"1, 2, 3","second array sorted")});test("collections: invoke w/ function reference",function(){var a=[[5,1,7],[3,2,1]];var b=_.invoke(a,Array.prototype.sort);equals(b[0].join(", "),"1, 5, 7","first array sorted");equals(b[1].join(", "),"1, 2, 3","second array sorted")});test("collections: invoke when strings have a call method",function(){String.prototype.call=function(){return 42};var a=[[5,1,7],[3,2,1]];var c="foo";equals(c.call(),42,"call function exists");var b=_.invoke(a,"sort");equals(b[0].join(", "),"1, 5, 7","first array sorted");equals(b[1].join(", "),"1, 2, 3","second array sorted");delete String.prototype.call;equals(c.call,undefined,"call function removed")});test("collections: pluck",function(){var a=[{name:"moe",age:30},{name:"curly",age:50}];equals(_.pluck(a,"name").join(", "),"moe, curly","pulls names out of objects")});test("collections: max",function(){equals(3,_.max([1,2,3]),"can perform a regular Math.max");var a=_.max([1,2,3],function(b){return -b});equals(a,1,"can perform a computation-based max");equals(-Infinity,_.max({}),"Maximum value of an empty object");equals(-Infinity,_.max([]),"Maximum value of an empty array")});test("collections: min",function(){equals(1,_.min([1,2,3]),"can perform a regular Math.min");var a=_.min([1,2,3],function(b){return -b});equals(a,3,"can perform a computation-based min");equals(Infinity,_.min({}),"Minimum value of an empty object");equals(Infinity,_.min([]),"Minimum value of an empty array")});test("collections: sortBy",function(){var a=[{name:"curly",age:50},{name:"moe",age:30}];a=_.sortBy(a,function(b){return b.age});equals(_.pluck(a,"name").join(", "),"moe, curly","stooges sorted by age")});test("collections: groupBy",function(){var c=_.groupBy([1,2,3,4,5,6],function(d){return d%2});ok("0" in c&&"1" in c,"created a group for each value");equals(c[0].join(", "),"2, 4, 6","put each even number in the right group");var b=["one","two","three","four","five","six","seven","eight","nine","ten"];var a=_.groupBy(b,"length");equals(a["3"].join(" "),"one two six ten");equals(a["4"].join(" "),"four five nine");equals(a["5"].join(" "),"three seven eight")});test("collections: sortedIndex",function(){var c=[10,20,30,40,50],b=35;var a=_.sortedIndex(c,b);equals(a,3,"35 should be inserted at index 3")});test("collections: shuffle",function(){var a=_.range(10);var b=_.shuffle(a).sort();notStrictEqual(a,b,"original object is unmodified");equals(b.join(","),a.join(","),"contains the same members before and after shuffle")});test("collections: toArray",function(){ok(!_.isArray(arguments),"arguments object is not an array");ok(_.isArray(_.toArray(arguments)),"arguments object converted into array");var b=[1,2,3];ok(_.toArray(b)!==b,"array is cloned");equals(_.toArray(b).join(", "),"1, 2, 3","cloned array contains same elements");var c=_.toArray({one:1,two:2,three:3});equals(c.join(", "),"1, 2, 3","object flattened into array")});test("collections: size",function(){equals(_.size({one:1,two:2,three:3}),3,"can compute the size of an object")})});