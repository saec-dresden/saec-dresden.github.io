(function(){var g,a,b,c,d,e,f,h,i,j;g=require("jison").Parser;j=/^function\s*\(\)\s*\{\s*return\s*([\s\S]*);\s*\}/;e=function(n,k,m){var l;n=n.replace(/\s{2,}/g," ");if(!k){return[n,"$$ = $1;",m]}k=(l=j.exec(k))?l[1]:"("+k+"())";k=k.replace(/\bnew /g,"$&yy.");k=k.replace(/\b(?:Block\.wrap|extend)\b/g,"yy.$&");return[n,"$$ = "+k+";",m]};c={Root:[e("",function(){return new Block}),e("Body"),e("Block TERMINATOR")],Body:[e("Line",function(){return Block.wrap([$1])}),e("Body TERMINATOR Line",function(){return $1.push($3)}),e("Body TERMINATOR")],Line:[e("Expression"),e("Statement")],Statement:[e("Return"),e("Comment"),e("STATEMENT",function(){return new Literal($1)})],Expression:[e("Value"),e("Invocation"),e("Code"),e("Operation"),e("Assign"),e("If"),e("Try"),e("While"),e("For"),e("Switch"),e("Class"),e("Throw")],Block:[e("INDENT OUTDENT",function(){return new Block}),e("INDENT Body OUTDENT",function(){return $2})],Identifier:[e("IDENTIFIER",function(){return new Literal($1)})],AlphaNumeric:[e("NUMBER",function(){return new Literal($1)}),e("STRING",function(){return new Literal($1)})],Literal:[e("AlphaNumeric"),e("JS",function(){return new Literal($1)}),e("REGEX",function(){return new Literal($1)}),e("DEBUGGER",function(){return new Literal($1)}),e("UNDEFINED",function(){return new Undefined}),e("NULL",function(){return new Null}),e("BOOL",function(){return new Bool($1)})],Assign:[e("Assignable = Expression",function(){return new Assign($1,$3)}),e("Assignable = TERMINATOR Expression",function(){return new Assign($1,$4)}),e("Assignable = INDENT Expression OUTDENT",function(){return new Assign($1,$4)})],AssignObj:[e("ObjAssignable",function(){return new Value($1)}),e("ObjAssignable : Expression",function(){return new Assign(new Value($1),$3,"object")}),e("ObjAssignable :       INDENT Expression OUTDENT",function(){return new Assign(new Value($1),$4,"object")}),e("Comment")],ObjAssignable:[e("Identifier"),e("AlphaNumeric"),e("ThisProperty")],Return:[e("RETURN Expression",function(){return new Return($2)}),e("RETURN",function(){return new Return})],Comment:[e("HERECOMMENT",function(){return new Comment($1)})],Code:[e("PARAM_START ParamList PARAM_END FuncGlyph Block",function(){return new Code($2,$5,$4)}),e("FuncGlyph Block",function(){return new Code([],$2,$1)})],FuncGlyph:[e("->",function(){return"func"}),e("=>",function(){return"boundfunc"})],OptComma:[e(""),e(",")],ParamList:[e("",function(){return[]}),e("Param",function(){return[$1]}),e("ParamList , Param",function(){return $1.concat($3)}),e("ParamList OptComma TERMINATOR Param",function(){return $1.concat($4)}),e("ParamList OptComma INDENT ParamList OptComma OUTDENT",function(){return $1.concat($4)})],Param:[e("ParamVar",function(){return new Param($1)}),e("ParamVar ...",function(){return new Param($1,null,true)}),e("ParamVar = Expression",function(){return new Param($1,$3)})],ParamVar:[e("Identifier"),e("ThisProperty"),e("Array"),e("Object")],Splat:[e("Expression ...",function(){return new Splat($1)})],SimpleAssignable:[e("Identifier",function(){return new Value($1)}),e("Value Accessor",function(){return $1.add($2)}),e("Invocation Accessor",function(){return new Value($1,[].concat($2))}),e("ThisProperty")],Assignable:[e("SimpleAssignable"),e("Array",function(){return new Value($1)}),e("Object",function(){return new Value($1)})],Value:[e("Assignable"),e("Literal",function(){return new Value($1)}),e("Parenthetical",function(){return new Value($1)}),e("Range",function(){return new Value($1)}),e("This")],Accessor:[e(".  Identifier",function(){return new Access($2)}),e("?. Identifier",function(){return new Access($2,"soak")}),e(":: Identifier",function(){return[new Access(new Literal("prototype")),new Access($2)]}),e("::",function(){return new Access(new Literal("prototype"))}),e("Index")],Index:[e("INDEX_START IndexValue INDEX_END",function(){return $2}),e("INDEX_SOAK  Index",function(){return extend($2,{soak:true})})],IndexValue:[e("Expression",function(){return new Index($1)}),e("Slice",function(){return new Slice($1)})],Object:[e("{ AssignList OptComma }",function(){return new Obj($2,$1.generated)})],AssignList:[e("",function(){return[]}),e("AssignObj",function(){return[$1]}),e("AssignList , AssignObj",function(){return $1.concat($3)}),e("AssignList OptComma TERMINATOR AssignObj",function(){return $1.concat($4)}),e("AssignList OptComma INDENT AssignList OptComma OUTDENT",function(){return $1.concat($4)})],Class:[e("CLASS",function(){return new Class}),e("CLASS Block",function(){return new Class(null,null,$2)}),e("CLASS EXTENDS Expression",function(){return new Class(null,$3)}),e("CLASS EXTENDS Expression Block",function(){return new Class(null,$3,$4)}),e("CLASS SimpleAssignable",function(){return new Class($2)}),e("CLASS SimpleAssignable Block",function(){return new Class($2,null,$3)}),e("CLASS SimpleAssignable EXTENDS Expression",function(){return new Class($2,$4)}),e("CLASS SimpleAssignable EXTENDS Expression Block",function(){return new Class($2,$4,$5)})],Invocation:[e("Value OptFuncExist Arguments",function(){return new Call($1,$3,$2)}),e("Invocation OptFuncExist Arguments",function(){return new Call($1,$3,$2)}),e("SUPER",function(){return new Call("super",[new Splat(new Literal("arguments"))])}),e("SUPER Arguments",function(){return new Call("super",$2)})],OptFuncExist:[e("",function(){return false}),e("FUNC_EXIST",function(){return true})],Arguments:[e("CALL_START CALL_END",function(){return[]}),e("CALL_START ArgList OptComma CALL_END",function(){return $2})],This:[e("THIS",function(){return new Value(new Literal("this"))}),e("@",function(){return new Value(new Literal("this"))})],ThisProperty:[e("@ Identifier",function(){return new Value(new Literal("this"),[new Access($2)],"this")})],Array:[e("[ ]",function(){return new Arr([])}),e("[ ArgList OptComma ]",function(){return new Arr($2)})],RangeDots:[e("..",function(){return"inclusive"}),e("...",function(){return"exclusive"})],Range:[e("[ Expression RangeDots Expression ]",function(){return new Range($2,$4,$3)})],Slice:[e("Expression RangeDots Expression",function(){return new Range($1,$3,$2)}),e("Expression RangeDots",function(){return new Range($1,null,$2)}),e("RangeDots Expression",function(){return new Range(null,$2,$1)}),e("RangeDots",function(){return new Range(null,null,$1)})],ArgList:[e("Arg",function(){return[$1]}),e("ArgList , Arg",function(){return $1.concat($3)}),e("ArgList OptComma TERMINATOR Arg",function(){return $1.concat($4)}),e("INDENT ArgList OptComma OUTDENT",function(){return $2}),e("ArgList OptComma INDENT ArgList OptComma OUTDENT",function(){return $1.concat($4)})],Arg:[e("Expression"),e("Splat")],SimpleArgs:[e("Expression"),e("SimpleArgs , Expression",function(){return[].concat($1,$3)})],Try:[e("TRY Block",function(){return new Try($2)}),e("TRY Block Catch",function(){return new Try($2,$3[0],$3[1])}),e("TRY Block FINALLY Block",function(){return new Try($2,null,null,$4)}),e("TRY Block Catch FINALLY Block",function(){return new Try($2,$3[0],$3[1],$5)})],Catch:[e("CATCH Identifier Block",function(){return[$2,$3]})],Throw:[e("THROW Expression",function(){return new Throw($2)})],Parenthetical:[e("( Body )",function(){return new Parens($2)}),e("( INDENT Body OUTDENT )",function(){return new Parens($3)})],WhileSource:[e("WHILE Expression",function(){return new While($2)}),e("WHILE Expression WHEN Expression",function(){return new While($2,{guard:$4})}),e("UNTIL Expression",function(){return new While($2,{invert:true})}),e("UNTIL Expression WHEN Expression",function(){return new While($2,{invert:true,guard:$4})})],While:[e("WhileSource Block",function(){return $1.addBody($2)}),e("Statement  WhileSource",function(){return $2.addBody(Block.wrap([$1]))}),e("Expression WhileSource",function(){return $2.addBody(Block.wrap([$1]))}),e("Loop",function(){return $1})],Loop:[e("LOOP Block",function(){return new While(new Literal("true")).addBody($2)}),e("LOOP Expression",function(){return new While(new Literal("true")).addBody(Block.wrap([$2]))})],For:[e("Statement  ForBody",function(){return new For($1,$2)}),e("Expression ForBody",function(){return new For($1,$2)}),e("ForBody    Block",function(){return new For($2,$1)})],ForBody:[e("FOR Range",function(){return{source:new Value($2)}}),e("ForStart ForSource",function(){$2.own=$1.own;$2.name=$1[0];$2.index=$1[1];return $2})],ForStart:[e("FOR ForVariables",function(){return $2}),e("FOR OWN ForVariables",function(){$3.own=true;return $3})],ForValue:[e("Identifier"),e("ThisProperty"),e("Array",function(){return new Value($1)}),e("Object",function(){return new Value($1)})],ForVariables:[e("ForValue",function(){return[$1]}),e("ForValue , ForValue",function(){return[$1,$3]})],ForSource:[e("FORIN Expression",function(){return{source:$2}}),e("FOROF Expression",function(){return{source:$2,object:true}}),e("FORIN Expression WHEN Expression",function(){return{source:$2,guard:$4}}),e("FOROF Expression WHEN Expression",function(){return{source:$2,guard:$4,object:true}}),e("FORIN Expression BY Expression",function(){return{source:$2,step:$4}}),e("FORIN Expression WHEN Expression BY Expression",function(){return{source:$2,guard:$4,step:$6}}),e("FORIN Expression BY Expression WHEN Expression",function(){return{source:$2,step:$4,guard:$6}})],Switch:[e("SWITCH Expression INDENT Whens OUTDENT",function(){return new Switch($2,$4)}),e("SWITCH Expression INDENT Whens ELSE Block OUTDENT",function(){return new Switch($2,$4,$6)}),e("SWITCH INDENT Whens OUTDENT",function(){return new Switch(null,$3)}),e("SWITCH INDENT Whens ELSE Block OUTDENT",function(){return new Switch(null,$3,$5)})],Whens:[e("When"),e("Whens When",function(){return $1.concat($2)})],When:[e("LEADING_WHEN SimpleArgs Block",function(){return[[$2,$3]]}),e("LEADING_WHEN SimpleArgs Block TERMINATOR",function(){return[[$2,$3]]})],IfBlock:[e("IF Expression Block",function(){return new If($2,$3,{type:$1})}),e("IfBlock ELSE IF Expression Block",function(){return $1.addElse(new If($4,$5,{type:$3}))})],If:[e("IfBlock"),e("IfBlock ELSE Block",function(){return $1.addElse($3)}),e("Statement  POST_IF Expression",function(){return new If($3,Block.wrap([$1]),{type:$2,statement:true})}),e("Expression POST_IF Expression",function(){return new If($3,Block.wrap([$1]),{type:$2,statement:true})})],Operation:[e("UNARY Expression",function(){return new Op($1,$2)}),e("-     Expression",(function(){return new Op("-",$2)}),{prec:"UNARY"}),e("+     Expression",(function(){return new Op("+",$2)}),{prec:"UNARY"}),e("-- SimpleAssignable",function(){return new Op("--",$2)}),e("++ SimpleAssignable",function(){return new Op("++",$2)}),e("SimpleAssignable --",function(){return new Op("--",$1,null,true)}),e("SimpleAssignable ++",function(){return new Op("++",$1,null,true)}),e("Expression ?",function(){return new Existence($1)}),e("Expression +  Expression",function(){return new Op("+",$1,$3)}),e("Expression -  Expression",function(){return new Op("-",$1,$3)}),e("Expression MATH     Expression",function(){return new Op($2,$1,$3)}),e("Expression SHIFT    Expression",function(){return new Op($2,$1,$3)}),e("Expression COMPARE  Expression",function(){return new Op($2,$1,$3)}),e("Expression LOGIC    Expression",function(){return new Op($2,$1,$3)}),e("Expression RELATION Expression",function(){if($2.charAt(0)==="!"){return new Op($2.slice(1),$1,$3).invert()}else{return new Op($2,$1,$3)}}),e("SimpleAssignable COMPOUND_ASSIGN       Expression",function(){return new Assign($1,$3,$2)}),e("SimpleAssignable COMPOUND_ASSIGN       INDENT Expression OUTDENT",function(){return new Assign($1,$4,$2)}),e("SimpleAssignable EXTENDS Expression",function(){return new Extends($1,$3)})]};f=[["left",".","?.","::"],["left","CALL_START","CALL_END"],["nonassoc","++","--"],["left","?"],["right","UNARY"],["left","MATH"],["left","+","-"],["left","SHIFT"],["left","RELATION"],["left","COMPARE"],["left","LOGIC"],["nonassoc","INDENT","OUTDENT"],["right","=",":","COMPOUND_ASSIGN","RETURN","THROW","EXTENDS"],["right","FORIN","FOROF","BY","WHEN"],["right","IF","ELSE","FOR","WHILE","UNTIL","LOOP","SUPER","CLASS"],["right","POST_IF"]];i=[];for(d in c){b=c[d];c[d]=(function(){var k,l,m,n,o,p;p=[];for(k=0,m=b.length;k<m;k++){a=b[k];o=a[0].split(" ");for(l=0,n=o.length;l<n;l++){h=o[l];if(!c[h]){i.push(h)}}if(d==="Root"){a[1]="return "+a[1]}p.push(a)}return p})()}exports.parser=new g({tokens:i.join(" "),bnf:c,operators:f.reverse(),startSymbol:"Root"})}).call(this);